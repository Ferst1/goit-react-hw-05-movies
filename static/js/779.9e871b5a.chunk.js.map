{"version":3,"file":"static/js/779.9e871b5a.chunk.js","mappings":"+OAEaA,E,OAAWC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kH,2BCwCjC,EAnCgB,WACd,IAAAC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAClBI,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAkCP,EAAAA,EAAAA,WAAS,GAAMQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxBG,EAAO,SAAAC,OAAYP,EAAO,YAahC,OAXAQ,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,GAAUH,GACPI,MAAK,SAAAC,GACJ,OAAOZ,EAAWY,EAAIC,QACxB,IACCC,OAAM,SAAAC,GACLA,GAASC,IAAAA,OAAAA,QAAwB,UAADR,OAAWO,GAC7C,IACCE,QAAQX,GAAa,GAC1B,GAAG,CAACC,KAEFW,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACsB,IAAnBpB,EAAQqB,SAAgBC,EAAAA,EAAAA,KAAA,KAAAF,SAAG,8BAC3BpB,EAAQqB,OAAS,IAChBC,EAAAA,EAAAA,KAAC9B,EAAQ,CAAA4B,SACNpB,EAAQuB,KAAI,SAAAC,GAAM,OACjBL,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,WAASI,EAAOC,WACpBH,EAAAA,EAAAA,KAAA,KAAAF,SAAII,EAAOE,YAFJF,EAAOG,GAGX,MAIVrB,IAAagB,EAAAA,EAAAA,KAACM,EAAAA,EAAM,MAG3B,C,qFCxCMC,EAAW,gCAEV,SAAelB,EAASmB,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAe9B,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,GAAAC,IAAAA,MAfM,SAAAC,EAAyB5B,GAAO,IAAA6B,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAQpC,OAPKH,EAAU,CACdI,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAELN,EAAAE,KAAA,EACYK,MAAM,GAADpC,OAAIoB,GAAQpB,OAAGD,GAAW6B,GAASzB,MAAK,SAAAkC,GACxD,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MAClB,IAAG,KAAD,SAAAZ,EAAAa,OAAA,SAAAb,EAAAc,MAAA,wBAAAd,EAAAe,OAAA,GAAAjB,EAAA,MACHJ,MAAA,KAAAC,UAAA,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/fetchMovie.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ItemList = styled.ul`\n  li {\n    list-style: none;\n    padding: 2px 16px;\n    margin: 16px;\n    border-radius: 8px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchData } from 'services/fetchMovie';\nimport { Loader } from 'components/Loader/Loader';\nimport { ItemList } from './Reviews.styled';\nimport Notiflix from 'notiflix';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const pathUrl = `movie/${movieId}/reviews`;\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchData(pathUrl)\n      .then(res => {\n        return setReviews(res.results);\n      })\n      .catch(error => {\n        error && Notiflix.Notify.failure(`Sorry, ${error}`);\n      })\n      .finally(setIsLoading(false));\n  }, [pathUrl]);\n  return (\n    <div>\n      {reviews.length === 0 && <p>We don't have any reviews</p>}\n      {reviews.length > 0 && (\n        <ItemList>\n          {reviews.map(review => (\n            <li key={review.id}>\n              <h5>Author: {review.author}</h5>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ItemList>\n      )}\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Reviews;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchData(pathUrl) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjYThhZDc3MjZkZTQ5ZTE4NmNkY2Q0ZDI5NDNmYmE4ZiIsInN1YiI6IjY1NDZhNmJhNWMwNzFiMDEwOTg2ZjRiZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0-nbdYbpGetqHXvI-1FB0LVLeN8C_gUHTEMH1uJZEQY',\n    },\n  };\n  return await fetch(`${BASE_URL}${pathUrl}`, options).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n"],"names":["ItemList","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","movieId","useParams","_useState3","_useState4","isLoading","setIsLoading","pathUrl","concat","useEffect","fetchData","then","res","results","catch","error","Notiflix","finally","_jsxs","children","length","_jsx","map","review","author","content","id","Loader","BASE_URL","_x","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","options","_context","prev","next","method","headers","accept","Authorization","fetch","response","ok","Error","status","json","abrupt","sent","stop"],"sourceRoot":""}