{"version":3,"file":"static/js/556.b8d5f2e9.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/AdditionalInfo/AdditionalInfo.styled.js","components/AdditionalInfo/AdditionalInfo.jsx","pages/MovieDetails.jsx","services/fetchMovie.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Card = styled.div`\n  margin-top: 16px;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Button = styled.button`\n  margin-top: 10px;\n  padding: 4px 12px;\n  font-size: 16px;\n  background-color: orange;\n  border-radius: 4px;\n`;\n","import { Button, Card } from './MovieCard.styled';\nimport PropTypes from 'prop-types';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst MovieCard = ({ movie, onGoBack }) => {\n  const { title, release_date, poster_path, overview, genres, vote_average } =\n    movie || {};\n  return (\n    <>\n      <Button type=\"button\" onClick={onGoBack}>\n        Go back\n      </Button>\n      <Card>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : defaultImg\n          }\n          width={250}\n          alt=\"poster\"\n        />\n        <div>\n          <h2>\n            {title}( {release_date.substr(0, 4)} )\n          </h2>\n          <p>User score: {Math.round(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <ul>\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        </div>\n      </Card>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.array.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }),\n};\n\nexport default MovieCard;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavLinkStyled = styled(NavLink)`\n  text-decoration: none;\n  font-size: 18px;\n\n  &.active {\n    color: orange;\n  }\n`;\n","import { NavLinkStyled } from './AdditionalInfo.styled';\n\nconst AdditionalInfo = () => {\n  return (\n    <div>\n      <h5>Additional Information</h5>\n      <ul>\n        <li key={'cast'}>\n          <NavLinkStyled to={'cast'}>Cast</NavLinkStyled>\n        </li>\n        <li key={'reviews'}>\n          <NavLinkStyled to={'reviews'}>Reviews</NavLinkStyled>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default AdditionalInfo;\n","import { Loader } from 'components/Loader/Loader';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport React, { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { fetchData } from 'services/fetchMovie';\nimport AdditionalInfo from 'components/AdditionalInfo/AdditionalInfo';\nimport Notiflix from 'notiflix';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const pathUrl = `movie/${movieId}`;\n\n  const location = useLocation();\n  const goBackLink = useRef(location.state?.from ?? '/movies');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchData(pathUrl)\n      .then(res => {\n        return setMovie(res);\n      })\n      .catch(error => {\n        error && Notiflix.Notify.failure(`Sorry, ${error}`);\n      })\n      .finally(setIsLoading(false));\n  }, [pathUrl]);\n\n  function onGoBack() {\n    navigate(goBackLink.current);\n  }\n  return (\n    movie !== null && (\n      <div>\n        <MovieCard movie={movie} onGoBack={onGoBack} />\n        <AdditionalInfo />\n        {isLoading && <Loader />}\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    )\n  );\n};\n\nexport default MovieDetails;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchData(pathUrl) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjYThhZDc3MjZkZTQ5ZTE4NmNkY2Q0ZDI5NDNmYmE4ZiIsInN1YiI6IjY1NDZhNmJhNWMwNzFiMDEwOTg2ZjRiZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0-nbdYbpGetqHXvI-1FB0LVLeN8C_gUHTEMH1uJZEQY',\n    },\n  };\n  return await fetch(`${BASE_URL}${pathUrl}`, options).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n"],"names":["Card","styled","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","_ref","movie","onGoBack","_ref2","title","release_date","poster_path","overview","genres","vote_average","_jsxs","_Fragment","children","_jsx","type","onClick","src","concat","width","alt","substr","Math","round","map","genre","name","id","NavLinkStyled","NavLink","to","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","setMovie","movieId","useParams","_useState3","_useState4","isLoading","setIsLoading","pathUrl","location","useLocation","goBackLink","useRef","state","from","navigate","useNavigate","useEffect","fetchData","then","res","catch","error","Notiflix","finally","MovieCard","current","AdditionalInfo","Loader","Suspense","fallback","Outlet","BASE_URL","_x","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","options","_context","prev","next","method","headers","accept","Authorization","fetch","response","ok","Error","status","json","abrupt","sent","stop"],"sourceRoot":""}