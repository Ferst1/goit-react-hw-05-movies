{"version":3,"file":"static/js/415.b8349406.chunk.js","mappings":"2KA0BA,IArBmB,SAAHA,GAAoB,IAAdC,EAAMD,EAANC,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACGJ,EAAOK,KAAI,SAAAC,GAAK,OACfH,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,EAAMI,IAAMC,MAAO,CAAEC,KAAMX,GAAWG,SACxDE,EAAMO,SAFFP,EAAMI,GAIV,OAKf,C,yGCaA,UAzBa,WACX,IAAAI,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCd,EAAMgB,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAc9B,OAZAG,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbE,EAAAA,EAAAA,GARY,oBASTC,MAAK,SAAAC,GACJ,OAAOR,EAAUQ,EAAIC,QACvB,IACCC,OAAM,SAAAC,GACLA,GAASC,IAAAA,OAAAA,QAAwB,UAADrB,OAAWoB,GAC7C,IACCE,QAAQT,GAAa,GAC1B,GAAG,KAGDU,EAAAA,EAAAA,MAAA,OAAA5B,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,oBACJD,EAAAA,EAAAA,KAAC8B,EAAAA,EAAU,CAACjC,OAAQA,IACnBqB,IAAalB,EAAAA,EAAAA,KAAC+B,EAAAA,EAAM,MAG3B,C,qFC/BMC,EAAW,gCAEV,SAAeX,EAASY,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAe9B,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,GAAAC,IAAAA,MAfM,SAAAC,EAAyBC,GAAO,IAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAQpC,OAPKH,EAAU,CACdI,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAELN,EAAAE,KAAA,EACYK,MAAM,GAAD3C,OAAI0B,GAAQ1B,OAAGkC,GAAWC,GAASnB,MAAK,SAAA4B,GACxD,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MAClB,IAAG,KAAD,SAAAZ,EAAAa,OAAA,SAAAb,EAAAc,MAAA,wBAAAd,EAAAe,OAAA,GAAAlB,EAAA,MACHJ,MAAA,KAAAC,UAAA,C","sources":["components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/fetchMovie.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MoviesList;\n","import React, { useEffect, useState } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { fetchData } from 'services/fetchMovie';\nimport Notiflix from 'notiflix';\n\nconst pathUrl = 'trending/all/day';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchData(pathUrl)\n      .then(res => {\n        return setMovies(res.results);\n      })\n      .catch(error => {\n        error && Notiflix.Notify.failure(`Sorry, ${error}`);\n      })\n      .finally(setIsLoading(false));\n  }, []);\n\n  return (\n    <div>\n      <h2>Trending Today</h2>\n      <MoviesList movies={movies} />\n      {isLoading && <Loader />}\n    </div>\n  );\n};\n\nexport default Home;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchData(pathUrl) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjYThhZDc3MjZkZTQ5ZTE4NmNkY2Q0ZDI5NDNmYmE4ZiIsInN1YiI6IjY1NDZhNmJhNWMwNzFiMDEwOTg2ZjRiZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0-nbdYbpGetqHXvI-1FB0LVLeN8C_gUHTEMH1uJZEQY',\n    },\n  };\n  return await fetch(`${BASE_URL}${pathUrl}`, options).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n"],"names":["_ref","movies","location","useLocation","_jsx","children","map","movie","Link","to","concat","id","state","from","title","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchData","then","res","results","catch","error","Notiflix","finally","_jsxs","MoviesList","Loader","BASE_URL","_x","_fetchData","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","pathUrl","options","_context","prev","next","method","headers","accept","Authorization","fetch","response","ok","Error","status","json","abrupt","sent","stop"],"sourceRoot":""}