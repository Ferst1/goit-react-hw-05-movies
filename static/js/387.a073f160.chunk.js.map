{"version":3,"file":"static/js/387.a073f160.chunk.js","mappings":"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","sources":["API.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/Error/Error.jsx","components/NotFound/NotFound.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst options = {\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0NDI5ZGVlOTNiZTJjYThhZDQ2YmYyMWRlMTQ5ZWU1MiIsInN1YiI6IjY0ZGI0NGQ1ZjQ5NWVlMDI5MzU2OTE1MiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.X9DeGRwHeq0vI0Xl8w9Nwm04Y3Uo2f5aEe62rr6KFDE',\n  },\n};\n\nexport const fetchMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/day?language=en-US`,\n    options\n  );\n  return data;\n};\n\nexport const fetchMoviesByQuery = async ({ query }) => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}?language=en-US`,\n    options\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?language=en-US`,\n    options\n  );\n  return data;\n};\n\nexport const fetchMovieReview = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  );\n  return data;\n};\n","import styled from 'styled-components';\n\nexport const CastWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  justify-content: center;\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  gap: 20px;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const CastListItem = styled.li`\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  padding: 10px;\n  text-align: center;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n`;\n\nexport const CastImage = styled.img`\n  width: 186px;\n  height: auto;\n  height: 280px;\n  border-radius: 8px;\n`;\n\nexport const CastName = styled.p`\n  margin-top: 8px;\n  font-weight: bold;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieCast } from 'API';\nimport NotFound from 'components/NotFound/NotFound';\nimport Error from 'components/Error/Error';\nimport Loader from 'components/Loader/Loader';\nimport {\n  CastWrap,\n  CastList,\n  CastListItem,\n  CastImage,\n  CastName,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n  const [isLoading, setIsloading] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const defaultImg = `https://i.pinimg.com/564x/01/0c/b2/010cb2c89b8924d966b4369c0142a6cd.jpg`;\n\n  useEffect(() => {\n    if (!movieId) return;\n    fetchMovieCast(movieId)\n      .then(({ cast }) => {\n        if (cast.length === 0) {\n          setIsEmpty(true);\n          return;\n        }\n        setCasts(cast);\n      })\n      .catch(error => {\n        setError(error.message);\n      })\n      .finally(setIsloading(false));\n  }, [movieId]);\n\n  return (\n    <CastWrap>\n      {isLoading && <Loader />}\n      {isEmpty && <NotFound />}\n      {error && <Error error={error} />}\n      <CastList>\n        {casts &&\n          casts.map(cast => (\n            <CastListItem key={cast.id}>\n              <CastImage\n                src={\n                  cast.profile_path\n                    ? `https://image.tmdb.org/t/p/w200${cast.profile_path}`\n                    : defaultImg\n                }\n                width={250}\n                alt={`${cast.name}`}\n              />\n              <CastName>{cast.name}</CastName>\n            </CastListItem>\n          ))}\n      </CastList>\n    </CastWrap>\n  );\n};\n\nexport default Cast;\n","const Error = ({ error }) => {\n  return (\n    <p\n      style={{\n        fontSize: 'large',\n      }}\n    >\n      Sorry. {error} ðŸ˜­\n    </p>\n  );\n};\n\nexport default Error;\n","const NotFound = () => {\n  return (\n    <p\n      style={{\n        fontSize: 'large',\n      }}\n    >\n      Sorry. We found nothing.\n    </p>\n  );\n};\n\nexport default NotFound;\n"],"names":["BASE_URL","options","headers","accept","Authorization","fetchMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","axios","concat","sent","abrupt","stop","apply","arguments","fetchMoviesByQuery","_ref3","_callee2","_ref2","query","_yield$axios$get2","_context2","_x","fetchMovieById","_ref4","_callee3","movieId","_yield$axios$get3","_context3","_x2","fetchMovieCast","_ref5","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieReview","_ref6","_callee5","_yield$axios$get5","_context5","_x4","CastWrap","styled","_templateObject","_taggedTemplateLiteral","CastList","_templateObject2","CastListItem","_templateObject3","CastImage","_templateObject4","CastName","_templateObject5","_useState","useState","_useState2","_slicedToArray","casts","setCasts","_useState3","_useState4","isLoading","setIsloading","_useState5","_useState6","isEmpty","setIsEmpty","_useState7","_useState8","error","setError","useParams","useEffect","then","cast","length","catch","message","finally","_jsxs","children","_jsx","Loader","NotFound","Error","map","src","profile_path","width","alt","name","id","style","fontSize"],"sourceRoot":""}